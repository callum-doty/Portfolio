{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nconst MinimalRandomAnimation = () => {\n  _s();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create minimal objects (cubes)\n    const objects = [];\n    const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n\n    // Generate random objects\n    for (let i = 0; i < 50; i++) {\n      const cube = new THREE.Mesh(geometry, material);\n      cube.position.set((Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10);\n      scene.add(cube);\n      objects.push(cube);\n    }\n    camera.position.z = 5;\n\n    // Animate the scene with random movement\n    function animate() {\n      requestAnimationFrame(animate);\n      objects.forEach(object => {\n        object.rotation.x += Math.random() * 0.01;\n        object.rotation.y += Math.random() * 0.01;\n        object.position.x += (Math.random() - 0.5) * 0.01;\n        object.position.y += (Math.random() - 0.5) * 0.01;\n        object.position.z += (Math.random() - 0.5) * 0.01;\n      });\n      renderer.render(scene, camera);\n    }\n    animate();\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return null;\n};\n_s(MinimalRandomAnimation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MinimalRandomAnimation;\nexport default MinimalRandomAnimation;\nvar _c;\n$RefreshReg$(_c, \"MinimalRandomAnimation\");","map":{"version":3,"names":["React","useEffect","THREE","MinimalRandomAnimation","_s","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","objects","geometry","BoxGeometry","material","MeshBasicMaterial","color","i","cube","Mesh","position","set","Math","random","add","push","z","animate","requestAnimationFrame","forEach","object","rotation","x","y","render","removeChild","_c","$RefreshReg$"],"sources":["/Users/callumd/Desktop/Tech901-WebDev/website/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst MinimalRandomAnimation = () => {\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create minimal objects (cubes)\n    const objects = [];\n    const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n\n    // Generate random objects\n    for (let i = 0; i < 50; i++) {\n      const cube = new THREE.Mesh(geometry, material);\n      cube.position.set(\n        (Math.random() - 0.5) * 10,\n        (Math.random() - 0.5) * 10,\n        (Math.random() - 0.5) * 10\n      );\n      scene.add(cube);\n      objects.push(cube);\n    }\n\n    camera.position.z = 5;\n\n    // Animate the scene with random movement\n    function animate() {\n      requestAnimationFrame(animate);\n\n      objects.forEach((object) => {\n        object.rotation.x += Math.random() * 0.01;\n        object.rotation.y += Math.random() * 0.01;\n        object.position.x += (Math.random() - 0.5) * 0.01;\n        object.position.y += (Math.random() - 0.5) * 0.01;\n        object.position.z += (Math.random() - 0.5) * 0.01;\n      });\n\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return null;\n};\n\nexport default MinimalRandomAnimation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
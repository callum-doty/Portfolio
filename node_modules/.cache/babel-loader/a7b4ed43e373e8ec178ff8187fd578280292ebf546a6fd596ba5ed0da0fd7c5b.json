{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nconst FullScreenGridBoxes = () => {\n  _s();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create box geometry and material\n    const boxSize = 50; // Fixed box size for the grid\n    const geometry = new THREE.BoxGeometry(boxSize, boxSize, 10);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n\n    // Calculate grid size\n    const cols = Math.ceil(window.innerWidth / boxSize);\n    const rows = Math.ceil(window.innerHeight / boxSize);\n\n    // Create a grid of boxes\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const cube = new THREE.Mesh(geometry, material);\n        cube.position.set((j - cols / 2) * boxSize, (i - rows / 2) * boxSize, 0 // Keep the boxes on the z-plane for a 2D effect\n        );\n        scene.add(cube);\n      }\n    }\n    camera.position.z = 500; // Adjust for orthographic camera\n\n    // Animate the scene (optional, simple rotation)\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Handle window resizing\n    window.addEventListener('resize', () => {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.left = window.innerWidth / -2;\n      camera.right = window.innerWidth / 2;\n      camera.top = window.innerHeight / 2;\n      camera.bottom = window.innerHeight / -2;\n      camera.updateProjectionMatrix();\n    });\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return null;\n};\n_s(FullScreenGridBoxes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FullScreenGridBoxes;\nexport default FullScreenGridBoxes;\nvar _c;\n$RefreshReg$(_c, \"FullScreenGridBoxes\");","map":{"version":3,"names":["React","useEffect","THREE","FullScreenGridBoxes","_s","scene","Scene","camera","OrthographicCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","boxSize","geometry","BoxGeometry","material","MeshBasicMaterial","color","cols","Math","ceil","rows","i","j","cube","Mesh","position","set","add","z","animate","requestAnimationFrame","render","addEventListener","left","right","top","bottom","updateProjectionMatrix","removeChild","_c","$RefreshReg$"],"sources":["/Users/callumd/Desktop/Tech901-WebDev/website/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst FullScreenGridBoxes = () => {\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / 2,\n      window.innerHeight / -2,\n      1,\n      1000\n    );\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create box geometry and material\n    const boxSize = 50; // Fixed box size for the grid\n    const geometry = new THREE.BoxGeometry(boxSize, boxSize, 10);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n\n    // Calculate grid size\n    const cols = Math.ceil(window.innerWidth / boxSize);\n    const rows = Math.ceil(window.innerHeight / boxSize);\n\n    // Create a grid of boxes\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const cube = new THREE.Mesh(geometry, material);\n        cube.position.set(\n          (j - cols / 2) * boxSize,\n          (i - rows / 2) * boxSize,\n          0 // Keep the boxes on the z-plane for a 2D effect\n        );\n        scene.add(cube);\n      }\n    }\n\n    camera.position.z = 500; // Adjust for orthographic camera\n\n    // Animate the scene (optional, simple rotation)\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    // Handle window resizing\n    window.addEventListener('resize', () => {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      camera.left = window.innerWidth / -2;\n      camera.right = window.innerWidth / 2;\n      camera.top = window.innerHeight / 2;\n      camera.bottom = window.innerHeight / -2;\n      camera.updateProjectionMatrix();\n    });\n\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return null;\n};\n\nexport default FullScreenGridBoxes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
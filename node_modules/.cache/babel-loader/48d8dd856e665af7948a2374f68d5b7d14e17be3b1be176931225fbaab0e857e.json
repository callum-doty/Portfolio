{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nconst InteractiveFluidLogo = () => {\n  _s();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    const geometry = new THREE.PlaneGeometry(20, 20, 100, 100);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        u_time: {\n          value: 0.0\n        },\n        u_mouse: {\n          value: new THREE.Vector2()\n        },\n        u_resolution: {\n          value: new THREE.Vector2(window.innerWidth, window.innerHeight)\n        }\n      },\n      vertexShader: `\n        uniform float u_time;\n        void main() {\n          vec3 pos = position;\n          pos.z = sin(pos.x * 10.0 + u_time * 2.0) * 0.2 + sin(pos.y * 10.0 + u_time * 2.0) * 0.2;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n        }\n      `,\n      fragmentShader: `\n        uniform vec2 u_mouse;\n        uniform vec2 u_resolution;\n        uniform float u_time;\n\n        void main() {\n          vec2 st = gl_FragCoord.xy / u_resolution.xy;\n          vec2 mouseNorm = u_mouse / u_resolution;\n          \n          // Distance from mouse for fluid interaction\n          float dist = distance(st, mouseNorm);\n          float wave = sin(dist * 10.0 - u_time * 5.0) * 0.5 + 0.5;\n\n          // Color based on wave\n          vec3 color = vec3(wave);\n\n          gl_FragColor = vec4(color, 1.0);\n        }\n      `\n    });\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n    camera.position.z = 5;\n\n    // Mouse interaction\n    const mouse = new THREE.Vector2();\n    document.addEventListener('mousemove', event => {\n      mouse.x = event.clientX;\n      mouse.y = event.clientY;\n      material.uniforms.u_mouse.value = mouse;\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      material.uniforms.u_time.value += 0.05;\n      renderer.render(scene, camera);\n    }\n    animate();\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return null;\n};\n_s(InteractiveFluidLogo, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = InteractiveFluidLogo;\nexport default InteractiveFluidLogo;\nvar _c;\n$RefreshReg$(_c, \"InteractiveFluidLogo\");","map":{"version":3,"names":["React","useEffect","THREE","InteractiveFluidLogo","_s","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","PlaneGeometry","material","ShaderMaterial","uniforms","u_time","value","u_mouse","Vector2","u_resolution","vertexShader","fragmentShader","plane","Mesh","add","position","z","mouse","addEventListener","event","x","clientX","y","clientY","animate","requestAnimationFrame","render","removeChild","_c","$RefreshReg$"],"sources":["/Users/callumd/Desktop/Tech901-WebDev/website/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst InteractiveFluidLogo = () => {\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    const geometry = new THREE.PlaneGeometry(20, 20, 100, 100);\n\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        u_time: { value: 0.0 },\n        u_mouse: { value: new THREE.Vector2() },\n        u_resolution: { value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n      },\n      vertexShader: `\n        uniform float u_time;\n        void main() {\n          vec3 pos = position;\n          pos.z = sin(pos.x * 10.0 + u_time * 2.0) * 0.2 + sin(pos.y * 10.0 + u_time * 2.0) * 0.2;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n        }\n      `,\n      fragmentShader: `\n        uniform vec2 u_mouse;\n        uniform vec2 u_resolution;\n        uniform float u_time;\n\n        void main() {\n          vec2 st = gl_FragCoord.xy / u_resolution.xy;\n          vec2 mouseNorm = u_mouse / u_resolution;\n          \n          // Distance from mouse for fluid interaction\n          float dist = distance(st, mouseNorm);\n          float wave = sin(dist * 10.0 - u_time * 5.0) * 0.5 + 0.5;\n\n          // Color based on wave\n          vec3 color = vec3(wave);\n\n          gl_FragColor = vec4(color, 1.0);\n        }\n      `,\n    });\n\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n\n    camera.position.z = 5;\n\n    // Mouse interaction\n    const mouse = new THREE.Vector2();\n    document.addEventListener('mousemove', (event) => {\n      mouse.x = event.clientX;\n      mouse.y = event.clientY;\n      material.uniforms.u_mouse.value = mouse;\n    });\n\n    function animate() {\n      requestAnimationFrame(animate);\n      material.uniforms.u_time.value += 0.05;\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return null;\n};\n\nexport default InteractiveFluidLogo;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjCH,SAAS,CAAC,MAAM;IACd,MAAMI,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;IAE9C,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAE1D,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,cAAc,CAAC;MACxCC,QAAQ,EAAE;QACRC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAI,CAAC;QACtBC,OAAO,EAAE;UAAED,KAAK,EAAE,IAAIvB,KAAK,CAACyB,OAAO,CAAC;QAAE,CAAC;QACvCC,YAAY,EAAE;UAAEH,KAAK,EAAE,IAAIvB,KAAK,CAACyB,OAAO,CAAClB,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW;QAAE;MAClF,CAAC;MACDkB,YAAY,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MACDC,cAAc,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG,IAAI7B,KAAK,CAAC8B,IAAI,CAACb,QAAQ,EAAEE,QAAQ,CAAC;IAChDhB,KAAK,CAAC4B,GAAG,CAACF,KAAK,CAAC;IAEhBxB,MAAM,CAAC2B,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,KAAK,GAAG,IAAIlC,KAAK,CAACyB,OAAO,CAAC,CAAC;IACjCZ,QAAQ,CAACsB,gBAAgB,CAAC,WAAW,EAAGC,KAAK,IAAK;MAChDF,KAAK,CAACG,CAAC,GAAGD,KAAK,CAACE,OAAO;MACvBJ,KAAK,CAACK,CAAC,GAAGH,KAAK,CAACI,OAAO;MACvBrB,QAAQ,CAACE,QAAQ,CAACG,OAAO,CAACD,KAAK,GAAGW,KAAK;IACzC,CAAC,CAAC;IAEF,SAASO,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BtB,QAAQ,CAACE,QAAQ,CAACC,MAAM,CAACC,KAAK,IAAI,IAAI;MACtCb,QAAQ,CAACiC,MAAM,CAACxC,KAAK,EAAEE,MAAM,CAAC;IAChC;IAEAoC,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACX5B,QAAQ,CAACC,IAAI,CAAC8B,WAAW,CAAClC,QAAQ,CAACM,UAAU,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb,CAAC;AAACd,EAAA,CAxEID,oBAAoB;AAAA4C,EAAA,GAApB5C,oBAAoB;AA0E1B,eAAeA,oBAAoB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
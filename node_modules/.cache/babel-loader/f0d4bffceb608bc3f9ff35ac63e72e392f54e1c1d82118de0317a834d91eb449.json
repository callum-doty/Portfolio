{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nconst UndulatingLandingPage = () => {\n  _s();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    const geometry = new THREE.PlaneGeometry(20, 20, 50, 50); // Large plane with many segments\n\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        u_time: {\n          value: 0.0\n        }\n      },\n      vertexShader: `\n        uniform float u_time;\n        void main() {\n          vec3 pos = position;\n          pos.z = sin(pos.x * 2.0 + u_time) * 0.5 + sin(pos.y * 2.0 + u_time) * 0.5;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n        }\n      `,\n      fragmentShader: `\n        void main() {\n          gl_FragColor = vec4(vec3(0.0, 0.0, 0.0), 1.0); // Black color\n        }\n      `,\n      wireframe: true\n    });\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n    camera.position.z = 10;\n    function animate() {\n      requestAnimationFrame(animate);\n      material.uniforms.u_time.value += 0.05;\n      renderer.render(scene, camera);\n    }\n    animate();\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return null;\n};\n_s(UndulatingLandingPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = UndulatingLandingPage;\nexport default UndulatingLandingPage;\nvar _c;\n$RefreshReg$(_c, \"UndulatingLandingPage\");","map":{"version":3,"names":["React","useEffect","THREE","UndulatingLandingPage","_s","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","PlaneGeometry","material","ShaderMaterial","uniforms","u_time","value","vertexShader","fragmentShader","wireframe","plane","Mesh","add","position","z","animate","requestAnimationFrame","render","removeChild","_c","$RefreshReg$"],"sources":["/Users/callumd/Desktop/Tech901-WebDev/website/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst UndulatingLandingPage = () => {\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    const geometry = new THREE.PlaneGeometry(20, 20, 50, 50); // Large plane with many segments\n\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        u_time: { value: 0.0 }\n      },\n      vertexShader: `\n        uniform float u_time;\n        void main() {\n          vec3 pos = position;\n          pos.z = sin(pos.x * 2.0 + u_time) * 0.5 + sin(pos.y * 2.0 + u_time) * 0.5;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n        }\n      `,\n      fragmentShader: `\n        void main() {\n          gl_FragColor = vec4(vec3(0.0, 0.0, 0.0), 1.0); // Black color\n        }\n      `,\n      wireframe: true\n    });\n\n    const plane = new THREE.Mesh(geometry, material);\n    scene.add(plane);\n\n    camera.position.z = 10;\n\n    function animate() {\n      requestAnimationFrame(animate);\n      material.uniforms.u_time.value += 0.05;\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return null;\n};\n\nexport default UndulatingLandingPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClCH,SAAS,CAAC,MAAM;IACd,MAAMI,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;IAE9C,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;IAE1D,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,cAAc,CAAC;MACxCC,QAAQ,EAAE;QACRC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAI;MACvB,CAAC;MACDC,YAAY,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MACDC,cAAc,EAAE;AACtB;AACA;AACA;AACA,OAAO;MACDC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG,IAAI3B,KAAK,CAAC4B,IAAI,CAACX,QAAQ,EAAEE,QAAQ,CAAC;IAChDhB,KAAK,CAAC0B,GAAG,CAACF,KAAK,CAAC;IAEhBtB,MAAM,CAACyB,QAAQ,CAACC,CAAC,GAAG,EAAE;IAEtB,SAASC,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9Bb,QAAQ,CAACE,QAAQ,CAACC,MAAM,CAACC,KAAK,IAAI,IAAI;MACtCb,QAAQ,CAACwB,MAAM,CAAC/B,KAAK,EAAEE,MAAM,CAAC;IAChC;IAEA2B,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACXnB,QAAQ,CAACC,IAAI,CAACqB,WAAW,CAACzB,QAAQ,CAACM,UAAU,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb,CAAC;AAACd,EAAA,CAjDID,qBAAqB;AAAAmC,EAAA,GAArBnC,qBAAqB;AAmD3B,eAAeA,qBAAqB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}